# –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–æ–¥—É–ª–∏ –∏ —Ñ—É–Ω–∫—Ü–∏–∏
from aiogram import Router, F # —Ä–æ—É—Ç–µ—Ä –∏ "–º–∞–≥–∏—á–µ—Å–∫–∏–π —Ñ–∏–ª—å—Ç—Ä"
from aiogram.filters import CommandStart, Command
from aiogram.types import Message, CallbackQuery
from create_bot import bot, admins
from keyboards.inline_kb import main_menu_kb, privacy_menu_kb, get_services_menu_kb, get_techsup_menu_kb, relocation_kb 
start_router = Router()


# –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –Ω–∞ —Ä–µ–ø–ª–∞–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ
@start_router.message(CommandStart())
async def cmd_start(message: Message):
    await message.answer(f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, <b>{message.from_user.first_name}</b>!\n–í–∞—à id: {message.from_user.id}\n\n<b>–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–µ –í–∞—Å –º–µ–Ω—é:</b>', 
                         reply_markup=main_menu_kb())
    
# –ü–æ–ª–∏—Ç–∏–∫–∞ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏
@start_router.message(Command('privacy'))
async def cmd_privacy(message: Message):
    await message.answer('<b>–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ:</b>', 
                         reply_markup=privacy_menu_kb())
    
# –≤—ã–±–æ—Ä –ø—É–Ω–∫—Ç–∞ –º–µ–Ω—é –Ω–∞ —Ä–µ–ø–ª–∞–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ
# –ø–æ–¥–∫–ª—é—á–∏—Ç—å —É—Å–ª—É–≥–∏
@start_router.callback_query(F.data == 'connect_services')
async def connect_services(callback:CallbackQuery):
    await callback.message.edit_text('<b>–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –í–∞—Å –≤–∞—Ä–∏–∞–Ω—Ç –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ: </b>',
                                     reply_markup=get_services_menu_kb())

# —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫–∞
@start_router.callback_query(F.data == 'techsup')
async def techsup(callback:CallbackQuery):
    await callback.message.edit_text('<b>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é: </b>',
                                     reply_markup=get_techsup_menu_kb())
    
# –ø–µ—Ä–µ–µ–∑–¥
@start_router.callback_query(F.data == 'relocation')
async def relocation(callback:CallbackQuery):
    await callback.message.edit_text('''<b>–ü–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –ø–µ—Ä–µ–µ—Ö–∞—Ç—å –Ω–∞ –Ω–æ–≤—É—é –∫–≤–∞—Ä—Ç–∏—Ä—É? üè† 
                                     
–í–æ–∑—å–º–∏—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –∏ –¢–í —Å —Å–æ–±–æ–π ‚ùó</b>
                                     
<b>–ü—Ä–æ–≥—Ä–∞–º–º–∞ ¬´–ü–µ—Ä–µ–µ–∑–¥¬ª</b>
–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∑–≤–æ–ª–∏—Ç —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ç–æ—Ç –∂–µ —Ç–∞—Ä–∏—Ñ –Ω–∞ —Ç–µ—Ö –∂–µ —É—Å–ª–æ–≤–∏—è—Ö –ø—Ä–∏ —Å–º–µ–Ω–µ –∞–¥—Ä–µ—Å–∞ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è.                                      
–°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –ø—Ä–∏–≤—ã—á–Ω—ã–π –æ–±—ä–µ–º –æ–ø—Ü–∏–π –∏ –∏–∑–±–∞–≤—å—Ç–µ—Å—å –æ—Ç –ø—É—Ç–∞–Ω–∏—Ü—ã: –Ω–æ–º–µ—Ä –¥–æ–≥–æ–≤–æ—Ä–∞, –±–∞–ª–∞–Ω—Å –∏ –±–æ–Ω—É—Å–Ω—ã–µ –±–∞–ª–ª—ã –æ—Å—Ç–∞–Ω—É—Ç—Å—è –ø—Ä–µ–∂–Ω–∏–º–∏. –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ, –≤–∑—è—Ç–æ–µ –≤ –∞—Ä–µ–Ω–¥—É, –æ—Å—Ç–∞–µ—Ç—Å—è –∑–∞ –í–∞–º–∏.
                                      
<b>–ü—Ä–∏—è—Ç–Ω—ã–π –±–æ–Ω—É—Å –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã ‚Äì —Å–∫–∏–¥–∫–∞ 50% –Ω–∞ 2 –º–µ—Å—è—Ü–∞ üí∞
                                     
–ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º—É ¬´–ü–µ—Ä–µ–µ–∑–¥¬ª –í—ã –º–æ–∂–µ—Ç–µ –≤ –õ–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ –∏–ª–∏ –ø–æ –Ω–æ–º–µ—Ä—É –≥–æ—Ä—è—á–µ–π –ª–∏–Ω–∏–∏</b>

üìû 8-800-1000-800
 ''',
                                     reply_markup=relocation_kb())
    
# –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é    
@start_router.callback_query(F.data == 'back_to')
async def back_to(callback:CallbackQuery):
    await callback.message.edit_text(f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, <b>{callback.from_user.first_name}</b>!\n–í–∞—à id: {callback.from_user.id}\n\n<b>–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–µ –í–∞—Å –º–µ–Ω—é:</b>', 
                                    reply_markup=main_menu_kb())

# –†–µ–∞–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –≤ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö
KEYWORDS = ['—Ä–æ—Å—Ç–µ–ª–µ–∫–æ–º', '–∏–Ω—Ç–µ—Ä–Ω–µ—Ç', '—Å–≤—è–∑—å', '–ø—Ä–∏—Å—Ç–∞–≤–∫–∞']

@start_router.message(F.text)
async def handle_keywords(message: Message):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
    if any(keyword in message.text.lower() for keyword in KEYWORDS):
        # –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await message.answer("–ú—ã –∑–∞–º–µ—Ç–∏–ª–∏, —á—Ç–æ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∞ –ø—Ä–æ–±–ª–µ–º–∞. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É –∏–ª–∏ –æ–∂–∏–¥–∞–π—Ç–µ, –ø–æ–∫–∞ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä.")

        # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
        for admin_id in admins:
            await bot.send_message(
            admin_id,
            f"‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.from_user.username} (ID: {message.from_user.id}) –Ω–∞–ø–∏—Å–∞–ª —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–æ–º:\n\n"
            f"<b>–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è:</b>\n{message.text}",
            parse_mode="HTML"
        )      